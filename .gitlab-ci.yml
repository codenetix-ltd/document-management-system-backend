image: docker

stages:
  - build
  - test
  - release
  - deploy

variables:
  CONTAINER_IMAGE: $CI_REGISTRY_IMAGE:$CI_BUILD_REF_NAME

#before_script:
#  - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY

build:
  stage: build
  script:
    - docker build --pull -t $CONTAINER_IMAGE --build-arg INSTALL_XDEBUG=true .
  tags:
    - docker-build

test:
  stage: test
  image:
    name: $CONTAINER_IMAGE
  services:
    - mysql:5.7.22
  variables:
    MYSQL_DATABASE: dms_test
    MYSQL_ROOT_PASSWORD: dms
    APP_ENV: test
    DB_DATABASE: dms_test
    DB_HOST: mysql
    DB_PASSWORD: dms
    DB_USERNAME: root
    APP_KEY: '"base64:N5A11hYX5GxzTqEPRtoRHjtdtqg65hGpw2Qis1V4b8M="'
    GIT_STRATEGY: none
  script:
    - /var/www/vendor/bin/phpcs --standard=/var/www/phpcs.xml --runtime-set ignore_warnings_on_exit true
    - /var/www/vendor/bin/phpunit /var/www/tests/Feature -c /var/www/phpunit.xml --coverage-text --colors=never
  tags:
    - docker-build

release:
  stage: release
  script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
    - docker push $CONTAINER_IMAGE
  only:
    - dev
    - master
  tags:
    - docker-build

deploy_dev:
  variables:
    GIT_STRATEGY: none
  stage: deploy
  only:
    - dev
  script:
    - docker run --env RANCHER_URL="http://rancher.codenetix.com/v1/projects/1a17584" --env RANCHER_ACCESS_KEY="$RANCHER_ACCESS_KEY" --env RANCHER_SECRET_KEY="$RANCHER_SECRET_KEY" --env RANCHER_STACK_ID="1st133" --env RANCHER_STACK_NAME="Default" --env RANCHER_SERVICE_NAME="backend" mildberrydigital/rancher-remote-upgrade:latest backend
    - docker run --env RANCHER_URL="http://rancher.codenetix.com/v1/projects/1a17584" --env RANCHER_ACCESS_KEY="$RANCHER_ACCESS_KEY" --env RANCHER_SECRET_KEY="$RANCHER_SECRET_KEY" --env RANCHER_STACK_ID="1st133" --env RANCHER_STACK_NAME="Default" --env RANCHER_SERVICE_NAME="dms-proxy" mildberrydigital/rancher-remote-upgrade:latest dms-proxy
  tags:
    - docker-build